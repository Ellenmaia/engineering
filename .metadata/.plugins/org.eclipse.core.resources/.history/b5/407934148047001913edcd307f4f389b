package com.engineering.prova.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.engineering.prova.entity.Cliente;
import com.engineering.prova.repositors.ClienteRepository;

@RestController
public class ClienteController {
	private ClienteRepository clienteRepository;
	
	ClienteController (ClienteRepository clienteRepository){
		this.clienteRepository = clienteRepository;
	}
	
	@RequestMapping(value={"/cliente"}, method={RequestMethod.POST} )
	public Cliente inserir(@RequestBody Cliente cliente) {
		return clienteRepository.save(cliente);
	}
	
	@RequestMapping(value={"/cliente/{id}"}, method={RequestMethod.PUT})
	public Cliente update(@PathVariable("id") Integer id, @RequestBody Cliente cliente) {
		return clienteRepository.save(cliente);
	}
	
	@RequestMapping(value={"/cliente"}, method={RequestMethod.GET})
	public List<Cliente> buscar(@RequestParam boolean sortByWeight) {
		return clienteRepository.findAll();
	}
	
	@RequestMapping(value={"/cliente/{id}"}, method={RequestMethod.GET})
	public ResponseEntity<Cliente> form3(@PathVariable("id") Integer id) {
		//Tirar o ResponseEntity<Vendedor> por ResponseEntity pois o retorno 
		//do notFound não é do tipo Vendedor
		Optional<Cliente> findById = clienteRepository.findById(id);
		
		if (findById.isPresent())
			return ResponseEntity.ok(findById.get());
		else
			return ResponseEntity.notFound().build();	
	}
	
	@RequestMapping(value={"/cliente/{id}"}, method={RequestMethod.DELETE})
	public void delete(@PathVariable("id") Integer id) {
		clienteRepository.deleteById(id);
	}
}
